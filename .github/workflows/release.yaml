---
name: Release

on:
  push:
    branches: ["master"]
    paths: ["apps/**"]
  pull_request:
    branches: ["master"]
    paths: ["apps/**"]

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  changed-apps:
    name: Get Changed Apps
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.apps.outputs.apps }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Determine Changed Directories
        uses: tj-actions/changed-files@2f7c5bfce28377bc069a65ba478de0a74aa0ca32 # v46.0.1
        id: changed-dirs
        with:
          dir_names: true
          dir_names_max_depth: "1"
          path: apps

      - name: Extract Metadata
        id: apps
        working-directory: apps
        run: |
          apps=$(printf "%s/metadata.yaml\n" ${{ steps.changed-dirs.outputs.all_changed_and_modified_files }})
          apps=$(yq eval-all --indent=0 --output-format=json "[.]" ${apps})
          echo "apps=${apps}" >> $GITHUB_OUTPUT

  build:
    needs: changed-apps
    name: Build ${{ matrix.app.name }} (${{ matrix.platform }})
    runs-on: ${{ matrix.platform == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    strategy:
      matrix:
        app: ${{ fromJSON(needs.changed-apps.outputs.apps) }}
        platform: ["amd64", "arm64"]
      fail-fast: false
    outputs:
      amd64: ${{ steps.digest.outputs.amd64 }}
      arm64: ${{ steps.digest.outputs.arm64 }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: "${{ github.repository_owner }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: Build Image
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        id: build
        with:
          build-args: |-
            VENDOR=${{ github.repository_owner }}
            VERSION=${{ matrix.app.version }}
            REVISION=${{ github.sha }}
          cache-from: |-
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/build_cache:${{ matrix.app.name }}-${{ matrix.platform }},mode=max
          cache-to: |-
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/build_cache:${{ matrix.app.name }}-${{ matrix.platform }}
          labels: |-
            org.opencontainers.image.title=${{ matrix.app.name }}
            org.opencontainers.image.url=https://ghcr.io/${{ github.repository_owner }}/${{ matrix.app.name }}
            org.opencontainers.image.version=${{ matrix.app.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
          outputs: |-
            type=image,name=ghcr.io/${{ github.repository_owner }}/${{ matrix.app.name }},push-by-digest=true,name-canonical=true,push=true
          context: ./apps/${{ matrix.app.name }}
          platforms: linux/${{ matrix.platform }}
          provenance: false
          push: true

      - name: Export Digest
        id: digest
        run: |
          echo "${{ matrix.platform }}=${{ steps.build.outputs.digest }}" >> $GITHUB_OUTPUT

  merge:
    name: Merge ${{ matrix.app.name }}
    runs-on: ubuntu-latest
    needs: ["changed-apps", "build"]
    if: ${{ !cancelled() }}
    strategy:
      matrix:
        app: ${{ fromJSON(needs.changed-apps.outputs.apps) }}
      fail-fast: false
    steps:
      - name: Echo
        run: echo "${{ needs.build.outputs }}
