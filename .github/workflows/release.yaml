---
name: Release

on:
  push:
    branches: ["master"]
    paths: ["apps/**"]

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  changed-apps:
    name: Get Changed Apps
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.apps.outputs.apps }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Determine Changed Directories
        uses: tj-actions/changed-files@a284dc1814e3fd07f2e34267fc8f81227ed29fb8 # v45.0.9
        id: changed-dirs
        with:
          dir_names: true
          dir_names_max_depth: "1"
          path: apps

      - name: Extract Metadata
        id: apps
        working-directory: apps
        run: |
          apps=$(printf "%s/metadata.yaml\n" ${{ steps.changed-dirs.outputs.all_changed_and_modified_files }})
          apps=$(yq eval-all --indent=0 --output-format=json "[.]" ${apps})
          echo "apps=${apps}" >> $GITHUB_OUTPUT

  build:
    needs: changed-apps
    name: Build ${{ matrix.app.name }} (${{ matrix.platform }})
    runs-on: ${{ matrix.platform == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    strategy:
      matrix:
        app: ${{ fromJSON(needs.changed-apps.outputs.apps) }}
        platform: ["amd64", "arm64"]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: "${{ github.repository_owner }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.app.name }}
          tags: |
            type=raw,value=${{ github.sha }}-${{ matrix.platform }}
          flavor: |
            latest=false

      - name: Build Image
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        id: build
        with:
          build-args: |-
            VENDOR=${{ github.repository_owner }}
            VERSION=${{ matrix.app.version }}
            REVISION=${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/build_cache:${{ matrix.app.name }}-${{ matrix.platform }},mode=max
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/build_cache:${{ matrix.app.name }}-${{ matrix.platform }}
          context: ./apps/${{ matrix.app.name }}
          platforms: linux/${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          push: true

  merge:
    name: Merge ${{ matrix.app.name }}
    runs-on: ubuntu-latest
    needs: ["changed-apps", "build"]
    if: ${{ !cancelled() }}
    strategy:
      matrix:
        app: ${{ fromJSON(needs.changed-apps.outputs.apps) }}
      fail-fast: false
    steps:
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.app.name }}
          tags: |
            type=match,pattern=^(\d+(\.\d+)?(\.\d+)?(\.\d+)?),value=${{ matrix.app.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ matrix.app.version }},enable=${{ matrix.app.semver }}
            type=semver,pattern={{major}},value=${{ matrix.app.version }},enable=${{ matrix.app.semver }}
            type=raw,value=rolling
          flavor: |
            latest=false

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: "${{ github.repository_owner }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Push Images
        id: push
        uses: Noelware/docker-manifest-action@b33ab348026b120a895167160f5605b0197f0862 # v0
        with:
          inputs: ${{ join(fromJSON(steps.meta.outputs.json).tags, ',') }}
          images: >-
            ghcr.io/${{ github.repository_owner }}/${{ matrix.app.name }}:${{ github.sha }}-amd64,
            ghcr.io/${{ github.repository_owner }}/${{ matrix.app.name }}:${{ github.sha }}-arm64
          push: true

      - name: Install Cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3

      - name: Sign Image
        run: |
          digest=$(echo "${{ steps.push.outputs.images }}" | cut -d "," -f1 | cut -d "@" -f2)
          cosign sign --yes ghcr.io/${{ github.repository_owner }}/${{ matrix.app.name }}@${digest}

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/${{ matrix.app.name }}:${{ matrix.app.version }}
